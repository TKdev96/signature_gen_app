{"ast":null,"code":"var _jsxFileName = \"/home/tomek/Dokumenty/ReactKurs/genfooterappbeta1.0/src/components/AddData.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport useInput from \"../hooks/use-input\";\nimport ErrorModal from \"./ErrorModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddData = props => {\n  _s();\n\n  const {\n    value: inputName,\n    isValid: inputNameIsValid,\n    hasError: inputNameHasHandler,\n    valueChangeHandler: nameChangeHandler,\n    inputBlurHandler: inputNameBlurHandler,\n    reset: resetInputName\n  } = useInput(value => value.trim() !== '');\n  const {\n    value: inputFirstname,\n    isValid: inputFirstnameIsValid,\n    hasError: inputFirstnameHasHandler,\n    valueChangeHandler: FirstnameCh,\n    inputBlurHandler: inputFirstnameBlurHandler,\n    reset: resetInputFirstname\n  } = useInput(value => value.trim() !== \"\");\n  const {\n    value: inputJob,\n    isValid: inputJobIsValid,\n    hasError: inputJobHasHandler,\n    inputBlurHandler: inputJobBlurHandler,\n    reset: resetInputJob\n  } = useInput(value => value.trim() !== \"\");\n  const {\n    value: inputEmail,\n    isValid: inputEmailIsValid,\n    hasError: inputEmailHasHandler,\n    inputBlurHandler: inputEmailBlurHandler,\n    reset: resetInputEmail\n  } = useInput(value => value.includes('@'));\n  const {\n    value: inputPhone,\n    isValid: inputPhoneIsValid,\n    hasError: inputPhoneHasHandler,\n    inputBlurHandler: inputPhoneBlurHandler,\n    reset: resetInputPhone\n  } = useInput(value => value.trim().length() < 9);\n  let formIsValid = false;\n\n  if (inputNameIsValid && inputFirstnameIsValid && inputJobIsValid && inputEmailIsValid && inputPhoneIsValid) {\n    formIsValid = true;\n  }\n\n  const [error, setError] = useState('');\n\n  const addDataHandler = event => {\n    event.preventDefault();\n\n    if (inputName.trim().length === 0 || inputFirstname.trim().length === 0 || inputJob.trim().length === 0 || inputEmail.trim().length === 0 || inputPhone.trim().length < 9) {\n      setError({\n        title: 'Puste lub błędnie uzupełnione pola!',\n        message: 'Proszę poprawnie uzupełnić wszystkie dane!'\n      });\n      return;\n    }\n\n    console.log(inputName, inputFirstname, inputJob, inputEmail, inputPhone);\n    props.onAddData(inputName, inputFirstname, inputJob, inputEmail, inputPhone);\n    resetInputName();\n    resetInputFirstname();\n    resetInputJob();\n    resetInputEmail();\n    resetInputPhone();\n  };\n\n  const errorHandler = () => {\n    setError('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [error && /*#__PURE__*/_jsxDEV(ErrorModal, {\n      title: error.title,\n      message: error.message,\n      onConfirm: errorHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addDataHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"dg-input\",\n        placeholder: \"Imi\\u0119\",\n        type: \"text\",\n        value: inputName,\n        onBlur: inputNameBlurHandler,\n        onChange: nameChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"dg-input\",\n        placeholder: \"Nazwisko\",\n        type: \"text\",\n        value: inputFirstname,\n        onBlur: inputFirstnameBlurHandler,\n        onChange: firstnameChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"dg-input\",\n        placeholder: \"Numer telefonu\",\n        type: \"tel\",\n        value: inputPhone,\n        onBlur: inputPhoneBlurHandler,\n        onChange: phoneChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"dg-input\",\n        placeholder: \"Email\",\n        type: \"email\",\n        value: inputEmail,\n        onBlur: inputEmailBlurHandler,\n        onChange: emailChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"dg-input\",\n        placeholder: \"Stanowisko\",\n        type: \"text\",\n        value: inputJob,\n        onBlur: inputJobBlurHandler,\n        onChange: jobChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn--primary\",\n        type: \"submit\",\n        children: \"Potwierd\\u017A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddData, \"G2zTRCFlv/XAY5N/7x+5/lO6vsM=\", false, function () {\n  return [useInput, useInput, useInput, useInput, useInput];\n});\n\n_c = AddData;\nexport default AddData;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddData\");","map":{"version":3,"sources":["/home/tomek/Dokumenty/ReactKurs/genfooterappbeta1.0/src/components/AddData.js"],"names":["React","useState","useInput","ErrorModal","AddData","props","value","inputName","isValid","inputNameIsValid","hasError","inputNameHasHandler","valueChangeHandler","nameChangeHandler","inputBlurHandler","inputNameBlurHandler","reset","resetInputName","trim","inputFirstname","inputFirstnameIsValid","inputFirstnameHasHandler","FirstnameCh","inputFirstnameBlurHandler","resetInputFirstname","inputJob","inputJobIsValid","inputJobHasHandler","inputJobBlurHandler","resetInputJob","inputEmail","inputEmailIsValid","inputEmailHasHandler","inputEmailBlurHandler","resetInputEmail","includes","inputPhone","inputPhoneIsValid","inputPhoneHasHandler","inputPhoneBlurHandler","resetInputPhone","length","formIsValid","error","setError","addDataHandler","event","preventDefault","title","message","console","log","onAddData","errorHandler","firstnameChangeHandler","phoneChangeHandler","emailChangeHandler","jobChangeHandler"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport useInput from \"../hooks/use-input\";\nimport ErrorModal from \"./ErrorModal\";\n\nconst AddData = (props) => {\n\n  const {\n        value: inputName,\n        isValid: inputNameIsValid,\n        hasError: inputNameHasHandler,\n        valueChangeHandler: nameChangeHandler,\n        inputBlurHandler: inputNameBlurHandler,\n        reset: resetInputName,\n  } = useInput((value) => value.trim() !== '');\n\n  const {\n    value: inputFirstname,\n    isValid: inputFirstnameIsValid,\n    hasError: inputFirstnameHasHandler,\n    valueChangeHandler: FirstnameCh , \n    inputBlurHandler: inputFirstnameBlurHandler,\n    reset: resetInputFirstname,\n  } = useInput((value) => value.trim() !== \"\");\n\n  const {\n    value: inputJob,\n    isValid: inputJobIsValid,\n    hasError: inputJobHasHandler,\n    inputBlurHandler: inputJobBlurHandler,\n    reset: resetInputJob,\n  } = useInput((value) => value.trim() !== \"\");\n\n  const {\n    value: inputEmail,\n    isValid: inputEmailIsValid,\n    hasError: inputEmailHasHandler,\n    inputBlurHandler: inputEmailBlurHandler,\n    reset: resetInputEmail,\n  } = useInput((value) => value.includes('@'));\n\n  const {\n    value: inputPhone,\n    isValid: inputPhoneIsValid,\n    hasError: inputPhoneHasHandler,\n    inputBlurHandler: inputPhoneBlurHandler,\n    reset: resetInputPhone,\n  } = useInput((value) => value.trim().length() < 9);\n\n  let formIsValid = false;\n\n  if(inputNameIsValid && inputFirstnameIsValid && inputJobIsValid && inputEmailIsValid && inputPhoneIsValid) {\n    formIsValid = true;\n  }\n\n\n\n\n  const [error, setError] = useState('');\n\n\n\n  const addDataHandler = (event) => {\n    event.preventDefault();\n    if (\n      inputName.trim().length === 0 ||\n      inputFirstname.trim().length === 0 ||\n      inputJob.trim().length === 0 ||\n      inputEmail.trim().length === 0 ||\n      inputPhone.trim().length < 9\n    ) {\n      setError({\n        title: 'Puste lub błędnie uzupełnione pola!',\n        message: 'Proszę poprawnie uzupełnić wszystkie dane!'\n      })\n      return;\n    }\n\n    console.log(inputName, inputFirstname, inputJob, inputEmail, inputPhone);\n    props.onAddData(\n      inputName,\n      inputFirstname,\n      inputJob,\n      inputEmail,\n      inputPhone\n    );\n    \n    resetInputName();\n    resetInputFirstname();\n    resetInputJob();\n    resetInputEmail();\n    resetInputPhone();\n  \n\n  };\n\n\n  const errorHandler = () => {\n    setError('');\n  }\n\n  return (\n    <div>\n      {error && ( <ErrorModal title={error.title} message={error.message} onConfirm={errorHandler} /> )}\n      <form onSubmit={addDataHandler}>\n        <input\n          className=\"dg-input\"\n          placeholder=\"Imię\"\n          type=\"text\"\n          value={inputName}\n          onBlur={inputNameBlurHandler}\n          onChange={nameChangeHandler}\n        />\n\n        <input\n          className=\"dg-input\"\n          placeholder=\"Nazwisko\"\n          type=\"text\"\n          value={inputFirstname}\n          onBlur={inputFirstnameBlurHandler}\n          onChange={firstnameChangeHandler}\n        />\n        \n        <input\n          className=\"dg-input\"\n          placeholder=\"Numer telefonu\"\n          type=\"tel\"\n          value={inputPhone}\n          onBlur={inputPhoneBlurHandler}\n          onChange={phoneChangeHandler}\n        />\n\n        <input\n          className=\"dg-input\"\n          placeholder=\"Email\"\n          type=\"email\"\n          value={inputEmail}\n          onBlur={inputEmailBlurHandler}\n          onChange={emailChangeHandler}\n        />\n\n        <input\n          className=\"dg-input\"\n          placeholder=\"Stanowisko\"\n          type=\"text\"\n          value={inputJob}\n          onBlur={inputJobBlurHandler}\n          onChange={jobChangeHandler}\n        />\n\n        <button\n          className=\"btn btn--primary\"\n          type=\"submit\"\n        >\n          Potwierdź\n        </button>\n      </form>\n    </div>\n  );\n};\nexport default AddData;\n"]},"metadata":{},"sourceType":"module"}