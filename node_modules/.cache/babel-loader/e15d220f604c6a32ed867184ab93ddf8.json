{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\n\nconst useInput = validateValue => {\n  _s();\n\n  const [inputValue, setInputValue] = useState('');\n  const [inputFile, setInputFile] = useState('');\n  const [isTouched, setIsTouched] = useState(false);\n  const valueIsValid = validateValue(inputValue);\n  const hasError = !valueIsValid && isTouched;\n\n  const valueChangeHandler = event => {\n    setInputValue(event.target.value);\n  };\n\n  const fileChangeHandler = event => {\n    setInputFile(event.target.files[0]);\n  };\n\n  const inputBlurHandler = event => {\n    setIsTouched(true);\n  };\n\n  const reset = () => {\n    setInputValue('');\n    setIsTouched(false);\n  };\n\n  return {\n    value: inputValue,\n    isValid: valueIsValid,\n    hasError,\n    valueChangeHandler,\n    inputBlurHandler,\n    fileChangeHandler,\n    reset\n  };\n};\n\n_s(useInput, \"vBqU51Ex/xT6SxGrTwrN5s337Bc=\");\n\nexport default useInput;","map":{"version":3,"sources":["/home/tomek/Dokumenty/ReactKurs/genfooterappbeta1.2/src/hooks/use-input.js"],"names":["useState","useInput","validateValue","inputValue","setInputValue","inputFile","setInputFile","isTouched","setIsTouched","valueIsValid","hasError","valueChangeHandler","event","target","value","fileChangeHandler","files","inputBlurHandler","reset","isValid"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,QAAQ,GAAIC,aAAD,IAAmB;AAAA;;AAClC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BJ,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,KAAD,CAA1C;AAEA,QAAMS,YAAY,GAAGP,aAAa,CAACC,UAAD,CAAlC;AACA,QAAMO,QAAQ,GAAG,CAACD,YAAD,IAAiBF,SAAlC;;AAEA,QAAMI,kBAAkB,GAAIC,KAAD,IAAW;AACpCR,IAAAA,aAAa,CAACQ,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAb;AACD,GAFD;;AAIA,QAAMC,iBAAiB,GAAIH,KAAD,IAAW;AACnCN,IAAAA,YAAY,CAACM,KAAK,CAACC,MAAN,CAAaG,KAAb,CAAmB,CAAnB,CAAD,CAAZ;AACD,GAFD;;AAIA,QAAMC,gBAAgB,GAAIL,KAAD,IAAW;AAClCJ,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,GAFD;;AAIA,QAAMU,KAAK,GAAG,MAAM;AAClBd,IAAAA,aAAa,CAAC,EAAD,CAAb;AACAI,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAHD;;AAKA,SAAO;AACLM,IAAAA,KAAK,EAAEX,UADF;AAGLgB,IAAAA,OAAO,EAAEV,YAHJ;AAILC,IAAAA,QAJK;AAKLC,IAAAA,kBALK;AAMLM,IAAAA,gBANK;AAOLF,IAAAA,iBAPK;AAQLG,IAAAA;AARK,GAAP;AAUD,CAnCD;;GAAMjB,Q;;AAoCN,eAAeA,QAAf","sourcesContent":["import { useState } from \"react\";\n\nconst useInput = (validateValue) => {\n  const [inputValue, setInputValue] = useState('');\n  const [inputFile, setInputFile] = useState('');\n  const [isTouched, setIsTouched] = useState(false);\n\n  const valueIsValid = validateValue(inputValue);\n  const hasError = !valueIsValid && isTouched;\n\n  const valueChangeHandler = (event) => {\n    setInputValue(event.target.value);\n  };\n\n  const fileChangeHandler = (event) => {\n    setInputFile(event.target.files[0]);\n  };\n\n  const inputBlurHandler = (event) => {\n    setIsTouched(true);\n  };\n\n  const reset = () => {\n    setInputValue('');\n    setIsTouched(false);\n  };\n\n  return {\n    value: inputValue,\n    \n    isValid: valueIsValid,\n    hasError,\n    valueChangeHandler,\n    inputBlurHandler,\n    fileChangeHandler,\n    reset,\n  };\n};\nexport default useInput;\n"]},"metadata":{},"sourceType":"module"}