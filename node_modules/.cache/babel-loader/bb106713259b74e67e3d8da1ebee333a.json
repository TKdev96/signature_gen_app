{"ast":null,"code":"var _jsxFileName = \"/home/tomek/Dokumenty/ReactKurs/genfooterappbeta1.0/src/components/AddData.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport useInput from \"../hooks/use-input\";\nimport ErrorModal from \"./ErrorModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddData = props => {\n  _s();\n\n  const [error, setError] = useState(\"\");\n  const {\n    value: inputName,\n    isValid: inputNameIsValid,\n    hasError: inputNameHasError,\n    valueChangeHandler: nameChangeHandler,\n    inputBlurHandler: inputNameBlurHandler,\n    reset: resetInputName\n  } = useInput(value => value.trim() !== '');\n  const {\n    value: inputFirstname,\n    isValid: inputFirstnameIsValid,\n    hasError: inputFirstnameHasError,\n    valueChangeHandler: firstnameChangeHandler,\n    inputBlurHandler: inputFirstnameBlurHandler,\n    reset: resetInputFirstname\n  } = useInput(value => value.trim() !== '');\n  const {\n    value: inputJob,\n    isValid: inputJobIsValid,\n    hasError: inputJobHasError,\n    valueChangeHandler: jobChangeHandler,\n    inputBlurHandler: inputJobBlurHandler,\n    reset: resetInputJob\n  } = useInput(value => value.trim() !== '');\n  const {\n    value: inputEmail,\n    isValid: inputEmailIsValid,\n    hasError: inputEmailHasError,\n    valueChangeHandler: emailChangeHandler,\n    inputBlurHandler: inputEmailBlurHandler,\n    reset: resetInputEmail\n  } = useInput(value => value.includes('@'));\n  const {\n    value: inputPhone,\n    isValid: inputPhoneIsValid,\n    hasError: inputPhoneHasError,\n    valueChangeHandler: phoneChangeHandler,\n    inputBlurHandler: inputPhoneBlurHandler,\n    reset: resetInputPhone\n  } = useInput(value => value.trim() === '' && value.length < 9);\n  let formIsValid = false;\n\n  if (inputNameIsValid && inputFirstnameIsValid && inputJobIsValid && inputEmailIsValid && inputPhoneIsValid) {\n    formIsValid = true;\n  }\n\n  const addDataHandler = event => {\n    event.preventDefault();\n\n    if (inputName.trim().length === 0 || inputFirstname.trim().length === 0 || inputJob.trim().length === 0 || inputEmail.trim().length === 0 || inputPhone.trim().length < 9) {\n      setError({\n        title: 'Puste lub błędnie uzupełnione pola!',\n        message: 'Proszę poprawnie uzupełnić wszystkie dane!'\n      });\n      return;\n    }\n\n    console.log(inputName, inputFirstname, inputJob, inputEmail, inputPhone);\n    props.onAddData(inputName, inputFirstname, inputJob, inputEmail, inputPhone);\n    resetInputName();\n    resetInputFirstname();\n    resetInputJob();\n    resetInputEmail();\n    resetInputPhone();\n  };\n\n  const errorHandler = () => {\n    setError('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [error && /*#__PURE__*/_jsxDEV(ErrorModal, {\n      title: error.title,\n      message: error.message,\n      onConfirm: errorHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addDataHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"dg-input\",\n          placeholder: \"Imi\\u0119\",\n          type: \"text\",\n          onBlur: inputNameBlurHandler,\n          onChange: nameChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), inputNameHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-p\",\n          children: \"Name not must be empty!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"dg-input\",\n          placeholder: \"Nazwisko\",\n          type: \"text\",\n          onBlur: inputFirstnameBlurHandler,\n          onChange: firstnameChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"dg-input\",\n          placeholder: \"Numer telefonu\",\n          type: \"tel\",\n          onBlur: inputPhoneBlurHandler,\n          onChange: phoneChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"dg-input\",\n          placeholder: \"Email\",\n          type: \"email\",\n          onBlur: inputEmailBlurHandler,\n          onChange: emailChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"dg-input\",\n          placeholder: \"Stanowisko\",\n          type: \"text\",\n          onBlur: inputJobBlurHandler,\n          onChange: jobChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn--primary\",\n          type: \"submit\",\n          children: \"Potwierd\\u017A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddData, \"9Anij/uCgfdPMBqTCCSeSrB9Z2Q=\", false, function () {\n  return [useInput, useInput, useInput, useInput, useInput];\n});\n\n_c = AddData;\nexport default AddData;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddData\");","map":{"version":3,"sources":["/home/tomek/Dokumenty/ReactKurs/genfooterappbeta1.0/src/components/AddData.js"],"names":["React","useState","useInput","ErrorModal","AddData","props","error","setError","value","inputName","isValid","inputNameIsValid","hasError","inputNameHasError","valueChangeHandler","nameChangeHandler","inputBlurHandler","inputNameBlurHandler","reset","resetInputName","trim","inputFirstname","inputFirstnameIsValid","inputFirstnameHasError","firstnameChangeHandler","inputFirstnameBlurHandler","resetInputFirstname","inputJob","inputJobIsValid","inputJobHasError","jobChangeHandler","inputJobBlurHandler","resetInputJob","inputEmail","inputEmailIsValid","inputEmailHasError","emailChangeHandler","inputEmailBlurHandler","resetInputEmail","includes","inputPhone","inputPhoneIsValid","inputPhoneHasError","phoneChangeHandler","inputPhoneBlurHandler","resetInputPhone","length","formIsValid","addDataHandler","event","preventDefault","title","message","console","log","onAddData","errorHandler"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport useInput from \"../hooks/use-input\";\nimport ErrorModal from \"./ErrorModal\";\n\nconst AddData = (props) => {\n\n  const [error, setError] = useState(\"\");\n\n  const {\n        value: inputName,\n        isValid: inputNameIsValid,\n        hasError: inputNameHasError,\n        valueChangeHandler: nameChangeHandler,\n        inputBlurHandler: inputNameBlurHandler,\n        reset: resetInputName,\n  } = useInput((value) => value.trim() !== '');\n\n  const {\n    value: inputFirstname,\n    isValid: inputFirstnameIsValid,\n    hasError: inputFirstnameHasError,\n    valueChangeHandler: firstnameChangeHandler, \n    inputBlurHandler: inputFirstnameBlurHandler,\n    reset: resetInputFirstname,\n  } = useInput((value) => value.trim() !== '');\n\n  const {\n    value: inputJob,\n    isValid: inputJobIsValid,\n    hasError: inputJobHasError,\n    valueChangeHandler: jobChangeHandler,\n    inputBlurHandler: inputJobBlurHandler,\n    reset: resetInputJob,\n  } = useInput((value) => value.trim() !== '');\n\n  const {\n    value: inputEmail,\n    isValid: inputEmailIsValid,\n    hasError: inputEmailHasError,\n    valueChangeHandler: emailChangeHandler,\n    inputBlurHandler: inputEmailBlurHandler,\n    reset: resetInputEmail,\n  } = useInput((value) => value.includes('@'));\n\n  const {\n    value: inputPhone,\n    isValid: inputPhoneIsValid,\n    hasError: inputPhoneHasError,\n    valueChangeHandler: phoneChangeHandler,\n    inputBlurHandler: inputPhoneBlurHandler,\n    reset: resetInputPhone,\n  } = useInput((value) => value.trim() === '' && value.length < 9);\n\n  let formIsValid = false;\n\n  if(inputNameIsValid && inputFirstnameIsValid && inputJobIsValid && inputEmailIsValid && inputPhoneIsValid) {\n    formIsValid = true;\n  }\n\n\n\n\n\n\n\n  const addDataHandler = (event) => {\n    event.preventDefault();\n    if (\n      inputName.trim().length === 0 ||\n      inputFirstname.trim().length === 0 ||\n      inputJob.trim().length === 0 ||\n      inputEmail.trim().length === 0 ||\n      inputPhone.trim().length < 9\n    ) {\n      setError({\n        title: 'Puste lub błędnie uzupełnione pola!',\n        message: 'Proszę poprawnie uzupełnić wszystkie dane!'\n      })\n      return;\n    }\n\n    console.log(inputName, inputFirstname, inputJob, inputEmail, inputPhone);\n    props.onAddData(\n      inputName,\n      inputFirstname,\n      inputJob,\n      inputEmail,\n      inputPhone\n    );\n    \n    resetInputName();\n    resetInputFirstname();\n    resetInputJob();\n    resetInputEmail();\n    resetInputPhone();\n  \n\n  };\n\n\n  const errorHandler = () => {\n    setError('');\n  }\n\n  return (\n    <div>\n      {error && (\n        <ErrorModal\n          title={error.title}\n          message={error.message}\n          onConfirm={errorHandler}\n        />\n      )}\n      <form onSubmit={addDataHandler}>\n        <div>\n          <input\n            className=\"dg-input\"\n            placeholder=\"Imię\"\n            type=\"text\"\n            onBlur={inputNameBlurHandler}\n            onChange={nameChangeHandler}\n          />\n          {inputNameHasError && <p className=\"error-p\">Name not must be empty!</p>}\n        </div>\n        <div>\n          <input\n            className=\"dg-input\"\n            placeholder=\"Nazwisko\"\n            type=\"text\"\n            onBlur={inputFirstnameBlurHandler}\n            onChange={firstnameChangeHandler}\n          />\n        </div>\n        <div>\n          <input\n            className=\"dg-input\"\n            placeholder=\"Numer telefonu\"\n            type=\"tel\"\n            onBlur={inputPhoneBlurHandler}\n            onChange={phoneChangeHandler}\n          />\n        </div>\n        <div>\n          <input\n            className=\"dg-input\"\n            placeholder=\"Email\"\n            type=\"email\"\n            onBlur={inputEmailBlurHandler}\n            onChange={emailChangeHandler}\n          />\n        </div>\n        <div>\n          <input\n            className=\"dg-input\"\n            placeholder=\"Stanowisko\"\n            type=\"text\"\n            onBlur={inputJobBlurHandler}\n            onChange={jobChangeHandler}\n          />\n        </div>\n        <div>\n          <button className=\"btn btn--primary\" type=\"submit\">\n            Potwierdź\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\nexport default AddData;\n"]},"metadata":{},"sourceType":"module"}